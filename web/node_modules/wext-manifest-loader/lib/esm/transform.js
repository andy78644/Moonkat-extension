import { CUSTOM_PREFIX_REGEX, browserVendors, envVariables, ENVKeys, } from './constants';
export const transformManifest = (manifest, selectedVendor) => {
    if (Array.isArray(manifest)) {
        return manifest.map((newManifest) => {
            return transformManifest(newManifest, selectedVendor);
        });
    }
    if (typeof manifest === 'object') {
        return Object.entries(manifest).reduce((newManifest, [key, value]) => {
            const vendorMatch = key.match(CUSTOM_PREFIX_REGEX);
            if (vendorMatch) {
                const matches = vendorMatch[1].split('|');
                const isProd = process.env.NODE_ENV === 'production';
                const hasCurrentVendor = matches.includes(selectedVendor);
                const hasVendorKeys = matches.some((m) => browserVendors.includes(m));
                const hasEnvKey = matches.some((m) => envVariables.includes(m));
                const hasCurrentEnvKey = hasEnvKey &&
                    ((isProd && matches.includes(ENVKeys.PROD)) ||
                        (!isProd && matches.includes(ENVKeys.DEV)));
                if ((hasCurrentVendor && hasCurrentEnvKey) ||
                    (!hasVendorKeys && hasCurrentEnvKey) ||
                    (!hasEnvKey && hasCurrentVendor)) {
                    newManifest[vendorMatch[2]] = transformManifest(value, selectedVendor);
                }
            }
            else {
                newManifest[key] = transformManifest(value, selectedVendor);
            }
            return newManifest;
        }, {});
    }
    return manifest;
};
