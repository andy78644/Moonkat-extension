"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.transformManifest = void 0;
const constants_1 = require("./constants");
const transformManifest = (manifest, selectedVendor) => {
    if (Array.isArray(manifest)) {
        return manifest.map((newManifest) => {
            return (0, exports.transformManifest)(newManifest, selectedVendor);
        });
    }
    if (typeof manifest === 'object') {
        return Object.entries(manifest).reduce((newManifest, [key, value]) => {
            const vendorMatch = key.match(constants_1.CUSTOM_PREFIX_REGEX);
            if (vendorMatch) {
                const matches = vendorMatch[1].split('|');
                const isProd = process.env.NODE_ENV === 'production';
                const hasCurrentVendor = matches.includes(selectedVendor);
                const hasVendorKeys = matches.some((m) => constants_1.browserVendors.includes(m));
                const hasEnvKey = matches.some((m) => constants_1.envVariables.includes(m));
                const hasCurrentEnvKey = hasEnvKey &&
                    ((isProd && matches.includes(constants_1.ENVKeys.PROD)) ||
                        (!isProd && matches.includes(constants_1.ENVKeys.DEV)));
                if ((hasCurrentVendor && hasCurrentEnvKey) ||
                    (!hasVendorKeys && hasCurrentEnvKey) ||
                    (!hasEnvKey && hasCurrentVendor)) {
                    newManifest[vendorMatch[2]] = (0, exports.transformManifest)(value, selectedVendor);
                }
            }
            else {
                newManifest[key] = (0, exports.transformManifest)(value, selectedVendor);
            }
            return newManifest;
        }, {});
    }
    return manifest;
};
exports.transformManifest = transformManifest;
